{
  "_args": [
    [
      "plain-ffmpeg",
      "/Users/blaze/Sites/tts"
    ]
  ],
  "_from": "plain-ffmpeg@latest",
  "_id": "plain-ffmpeg@0.0.4",
  "_inCache": true,
  "_installable": true,
  "_location": "/plain-ffmpeg",
  "_npmUser": {
    "email": "andrejtrajchevski@gmail.com",
    "name": "whoeverest"
  },
  "_npmVersion": "1.2.2",
  "_phantomChildren": {},
  "_requested": {
    "name": "plain-ffmpeg",
    "raw": "plain-ffmpeg",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/plain-ffmpeg/-/plain-ffmpeg-0.0.4.tgz",
  "_shasum": "fdb061159e9db31a13065702255f14239a2e931c",
  "_shrinkwrap": null,
  "_spec": "plain-ffmpeg",
  "_where": "/Users/blaze/Sites/tts",
  "author": {
    "name": "Andrej T."
  },
  "bugs": {
    "url": "https://github.com/whoeverest/plain-ffmpeg/issues"
  },
  "dependencies": {
    "split": "~0.2.1"
  },
  "description": "Tiny FFmpeg wrapper.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "fdb061159e9db31a13065702255f14239a2e931c",
    "tarball": "http://registry.npmjs.org/plain-ffmpeg/-/plain-ffmpeg-0.0.4.tgz"
  },
  "gitHead": "2691e76fa00633c1513207c12c5896b04cfdb815",
  "homepage": "https://github.com/whoeverest/plain-ffmpeg#readme",
  "keywords": [
    "ffmpeg",
    "wrapper"
  ],
  "license": "BSD",
  "main": "plain-ffmpeg.js",
  "maintainers": [
    {
      "name": "whoeverest",
      "email": "andrejtrajchevski@gmail.com"
    }
  ],
  "name": "plain-ffmpeg",
  "optionalDependencies": {},
  "readme": "## Plain FFmpeg\n\nPlain FFmpeg is really tiny library for constructing and executing FFmpeg processes from Node.\n\n### Features\n\n* Output from stderr is formated in JSON\n* Unlike other FFmpeg wrappers, it exposes the actual process and it's events\n* It doesn't provide convinience methods that mask options i.e you'll be using `.in('-r', 24)` to set the input framerate instead of `.setFramerate(24)`\n\n### Example\n\nOne way of starting the process is:\n\n```javascript\nvar FFmpeg = require('./plain-ffmpeg');\n\nvar ffmpeg = new FFmpeg({\n    global: {'-y': null},\n    input: {\n        '-i': 'http://domain.com/video.mp4',\n        '-r': 24\n    },\n    output: {\n        'output.mov',\n        '-c:v': 'libx264'\n    }\n});\nffmpeg.start();\n\nffmpeg.on('progress', function(progress) {\n\tconsole.log(progress);\n})\n```\nAll methods return the object, so you can chain them like:\n\n```javascript\nvar ffmpeg = new FFmpeg('input_path', 'output_path').out('-f', 'mp4').start()\n```\n\nThe third argument in the constructor is an `options` object, so you can pass it presets:\n\n```javascript\nvar h264_preset = {\n\tin: {'-r', '24'},\n\tout: {\n\t\t'-c:v': 'libx264', \n\t\t'-c:a': 'libaac'\n\t}\n}\n\nvar ffmpeg = new FFmpeg('input_path', null, h264_preset).output('output_path');\nffmpeg.start()\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/whoeverest/plain-ffmpeg.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.4"
}
